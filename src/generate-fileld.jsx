import React from "react";
import { ConfigProvider, Tooltip } from "antd";
import { RiCheckboxBlankCircleFill } from "react-icons/ri";
import { MdOutlineCheckCircle } from "react-icons/md";
import { IoIosCheckmarkCircle } from "react-icons/io";

const fakeDataA = Array.from({ length: 32 }, (_, i) => ({
  id: `${i}_${"A"}`,
  category: "Category 1",
  type: "chair",
  seats: i + 1,
  name: `Category 1, Seats - ${i + 1}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "available",
  row: "A",
  color: "#787aff",
}));

const fakeDataB = Array.from({ length: 32 }, (_, i) => ({
  id: `${i}_${"B"}`,
  category: "Category 2",
  type: "seat",
  seats: i + 43,
  name: `Category 2, Seats - ${i + 43}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "available",
  row: "B",
  color: "#ffcc00",
}));

const fakeDataD = Array.from({ length: 28 }, (_, i) => ({
  id: `${i}_${"D"}`,
  category: "Category 3",
  type: "chair",
  seats: i + 31,
  name: `Category 3, Seats - ${i + 31}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "available",
  row: "D",
  color: "#fe6d73",
}));

const fakeDataw = Array.from({ length: 5 }, (_, i) => ({
  id: `${i}_${"W"}`,
  category: "Category 1",
  type: "seat",
  seats: i + 1,
  name: `Category 1, Seats - ${i + 1}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "busy",
  row: "D",
  color: "#787aff",
}));

const fakeDataE = Array.from({ length: 28 }, (_, i) => ({
  id: `${i}_${"E"}`,
  category: "Category 4",
  type: "chair",
  seats: i + 51,
  name: `Category 4, Seats - ${i + 51}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "available",
  row: "E",
  color: "#FC965D",
}));

const fakeDataF = Array.from({ length: 20 }, (_, i) => ({
  id: `${i}_${"F"}`,
  category: "Category 3",
  type: "seat",
  seats: i + 71,
  name: `Category 3, Seats - ${i + 71}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "busy",
  row: "F",
  color: "#fe6d73",
}));

const fakeDataG = Array.from({ length: 10 }, (_, i) => ({
  id: `${i}_${"G"}`,
  category: "Category 2",
  type: "seat",
  seats: i + 91,
  name: `Category 2, Seats - ${i + 91}`,
  img: "",
  price: 76.5,
  currency: "€",
  status: "available",
  row: "F",
  color: "#ffcc00",
}));

export const data = [
  ...fakeDataA,
  ...fakeDataB,
  ...fakeDataD,
  ...fakeDataE,
  ...fakeDataF,
  ...fakeDataG,
  ...fakeDataw,
];

export const mainData = [
  {
    section: 1,
    category: "DANCE FLOOR",
    name: "dance_floor",
    column: 100,
    row: 10,
    bg: "#53BC6B",
  },
  {
    section: 2,
    sectionRows: [2],
    seats: [
      {
        name: "A",
        column: 42,
        row: 1,
        group: [8, 8, 8, 8, 10],
        empty: [],
      },
      {
        name: "B",
        column: 42,
        row: 1,
        group: [8, 8, 8, 8, 10],
        empty: [],
      },
      {
        name: "D",
        column: 40,
        row: 1,
        group: [8, 8, 8, 8, 8],
        empty: [],
      },
    ],
  },
  {
    section: 3,
    piece: 2,
    seats: [
      {
        name: "E",
        column: 40,
        row: 1,
        group: [8, 8, 8, 8, 8],
        empty: [],
      },
      {
        name: "F",
        column: 38,
        row: 1,
        group: [8, 8, 8, 8, 6],
        empty: [],
      },
    ],
  },
];

export const categories = [
  {
    id: "ct1",
    name: "All CATEGORIES",
    seats: 127,
    currency: "€",
    type: "all",
    early_bird: false,
    color: "",
  },
  {
    id: "ct6",
    name: "Dance Floor",
    seats: 1786,
    price: 199.5,
    old_price: 76.5,
    currency: "€",
    type: "stand",
    early_bird: false,
    color: "#80ed99",
  },
  {
    id: "ct2",
    name: "Category 1",
    seats: 13,
    price: 197.5,
    old_price: 76.5,
    currency: "€",
    type: "chair",
    early_bird: false,
    color: "#787aff",
  },
  {
    id: "ct3",
    name: "Category 2",
    seats: 20,
    price: 199.5,
    currency: "€",
    type: "seat",
    early_bird: true,
    color: "#ffcc00",
  },
  {
    id: "ct4",
    name: "Category 3",
    seats: 20,
    price: 199.5,
    currency: "€",
    type: "seat",
    early_bird: true,
    color: "#fe6d73",
  },
  {
    id: "ct5",
    name: "Category 4",
    seats: 20,
    price: 100,
    old_price: 76.5,
    currency: "€",
    type: "chair",
    early_bird: false,
    color: "#FC965D",
  },
];

export const generateIcon = (type, color, size) => {
  switch (type) {
    case "stand":
      return (
        <svg
          className={`icon ${size}`}
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M9.71498 1.70482C9.72189 1.0768 10.08 0.663807 10.6274 0.62678C11.1638 0.591178 11.638 0.975685 11.6532 1.58947C11.685 2.95518 11.6795 4.32232 11.6284 5.68661C11.6159 6.00845 11.4141 6.35878 11.2136 6.62936C10.6924 7.33429 10.1463 8.02213 9.56982 8.68006C8.8371 9.51601 8.37534 10.4759 8.0629 11.5496C7.33847 14.0446 7.24584 13.3112 8.61451 15.463C8.83156 15.8048 9.11359 16.1139 9.26982 16.4813C9.47166 16.9569 9.68871 17.4725 9.7053 17.978C9.75922 19.5915 9.72742 21.2079 9.72189 22.8242C9.71913 23.542 9.32097 24.002 8.72649 23.9977C8.1652 23.9934 7.79331 23.5462 7.75322 22.8556C7.66197 21.2976 7.5652 19.7382 7.45598 18.1817C7.44077 17.9595 7.39377 17.7017 7.27073 17.5308C6.62925 16.6365 5.84814 15.9017 4.83615 15.3121C4.71035 15.238 4.55412 15.3363 4.55965 15.4858C4.6509 17.6476 4.738 19.704 4.82509 21.7604C4.84168 22.1506 4.87486 22.5408 4.86657 22.931C4.85413 23.4992 4.43108 23.9507 3.90435 23.9963C3.37347 24.0418 2.87854 23.6673 2.80112 23.092C2.45964 20.5286 2.04213 17.9695 1.85135 15.3918C1.76425 14.2241 2.09743 13.0108 2.32554 11.8359C2.47347 11.0754 2.75826 10.3406 3.01956 9.60858C3.13983 9.27249 3.10112 9.066 2.82048 8.83956C2.10296 8.25853 1.49328 7.85266 0.721848 7.1278C0.131523 6.55388 -0.0592616 6.06114 0.0153931 5.27504C0.11908 4.18561 0.0969603 3.08905 0.0153931 1.99676C-0.0495841 1.14658 0.32922 0.623932 0.973462 0.61966C1.56655 0.616811 1.95918 1.07395 1.96471 1.79027C1.97162 2.81989 1.93153 3.85237 1.99098 4.87772C2.01172 5.22377 2.1002 5.51856 2.44305 5.88171C3.10112 6.57809 3.91265 6.97684 4.94675 6.88C5.98915 6.78174 7.04815 6.87573 8.09746 6.8444C8.31728 6.83728 8.57857 6.70199 8.74308 6.53537C9.41774 5.8575 9.72327 5.04006 9.72466 3.88512L9.7136 1.7034H9.71498V1.70482ZM18.4579 15.191C18.3805 15.0771 18.2104 15.1042 18.1689 15.2366C17.3159 17.9196 16.4947 20.5101 15.668 23.0976C15.4413 23.8083 14.9325 24.1273 14.345 23.9464C13.745 23.7613 13.4906 23.2543 13.6482 22.5052C14.0394 20.6354 14.3768 18.7513 14.8537 16.9042C15.3818 14.8578 15.1703 12.7943 15.227 10.6282C15.2298 10.5058 15.086 10.4445 15.0044 10.5328C14.4279 11.1551 13.9952 11.7419 13.9606 12.6092C13.9247 13.5448 13.7767 14.4776 13.6606 15.4089C13.586 16.0056 13.1228 16.3674 12.5754 16.2919C12.0265 16.215 11.6698 15.7464 11.7307 15.1583C11.8551 13.9592 11.9519 12.7558 12.133 11.5667C12.2049 11.0939 12.3915 10.6467 12.6708 10.2637C13.3731 9.30524 14.1376 8.39524 14.8966 7.48382C15.0307 7.3229 15.2463 7.20042 15.4468 7.14061C16.4035 6.85152 17.3588 6.54534 18.3321 6.3303C19.8542 5.99279 20.6699 4.91332 21.1952 3.53622C21.5339 2.64758 21.7772 1.71906 22.0786 0.813337C22.3026 0.139738 22.8252 -0.143658 23.3962 0.0699572C23.9118 0.262211 24.1247 0.7934 23.927 1.43709C23.58 2.55786 23.2814 3.70141 22.8445 4.78515C22.5902 5.41745 22.21 5.98852 21.7372 6.46986C20.8289 7.39125 20.4653 8.42088 20.5911 9.73532C20.6961 10.8248 20.5855 11.9341 20.6256 13.0335C20.6408 13.4622 20.7514 13.9108 20.9146 14.3067C21.2035 15.0073 21.5408 15.6881 21.9031 16.3517C22.2445 16.9783 22.3717 17.6248 22.3427 18.3383C22.2819 19.8279 22.2597 21.3175 22.2266 22.8086C22.2155 23.3056 22.0772 23.72 21.592 23.9194C20.9173 24.1971 20.2689 23.7243 20.262 22.9296C20.2496 21.5454 20.298 20.1597 20.2358 18.7784C20.2123 18.2571 20.0367 17.6989 19.7865 17.2418C19.4077 16.5482 18.939 15.9074 18.4551 15.1939L18.4579 15.191ZM16.5058 0.894511C17.5579 0.898783 18.415 1.77603 18.415 2.84838C18.415 3.92072 17.5219 4.84639 16.4643 4.82645C15.4192 4.80651 14.5758 3.91218 14.5855 2.83413C14.5952 1.75039 15.4468 0.891663 16.5058 0.895935V0.894511ZM3.89744 3.81107C3.89053 2.70881 4.70343 1.8572 5.77487 1.84723C6.83939 1.83726 7.67165 2.67748 7.68686 3.77831C7.70068 4.86632 6.8781 5.75781 5.83432 5.7806C4.76288 5.80481 3.90573 4.93326 3.89744 3.81107Z"
            fill={color}
          />
        </svg>
      );
    case "seat":
      return (
        <svg
          className={`icon ${size}`}
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M2.06255 2.08262C2.98297 0.999147 4.12899 0.347529 5.57881 0.0971038C5.96683 0.0306643 6.3699 0.00766609 6.76694 0.00511072C10.2621 0 13.7634 0 17.2586 0C19.0272 0 20.4831 0.580067 21.6321 1.72231C21.7013 1.78875 21.7614 1.8603 21.8186 1.93441C21.8457 1.96763 21.8517 2.01363 21.8818 2.08518C21.7614 2.11328 21.6532 2.14395 21.5449 2.15928C19.9176 2.38671 18.7234 3.35775 18.5069 4.75042C18.2151 6.63117 17.9925 8.51958 17.7429 10.4029C17.6586 11.0315 17.5774 11.6601 17.5112 12.2887C17.4872 12.5341 17.3909 12.6465 17.0691 12.6465C13.6912 12.6388 10.3133 12.6363 6.93839 12.6465C6.51127 12.6465 6.53232 12.4344 6.49924 12.1942C6.17438 9.72315 5.87359 7.25212 5.50061 4.78619C5.27802 3.31175 4.14704 2.39949 2.41147 2.15417C2.32725 2.14139 2.24603 2.12095 2.05954 2.08262H2.06255ZM11.9887 17.3662C9.23344 17.3662 6.47818 17.3662 3.72292 17.3662C2.16181 17.3662 1.49104 16.8373 1.3226 15.5162C0.892468 12.1661 0.450303 8.816 0.0141539 5.46848C-0.109171 4.5281 0.585659 3.6925 1.62039 3.5494C2.71828 3.39608 3.70788 3.96592 3.87031 4.94718C4.132 6.52128 4.30947 8.10561 4.51702 9.68482C4.67343 10.868 4.8148 12.0562 4.9682 13.2393C5.0434 13.8194 5.33517 14.0417 6.02098 14.0443C10.0065 14.0443 13.992 14.0443 17.9775 14.0443C18.6873 14.0443 18.9671 13.8245 19.0483 13.2061C19.3852 10.6022 19.707 7.99828 20.071 5.39693C20.1311 4.95996 20.2996 4.49233 20.5793 4.13202C21.0365 3.55195 21.9509 3.38585 22.727 3.62095C23.5 3.85604 24.0505 4.50766 23.9963 5.23338C23.9332 6.06899 23.8008 6.90203 23.6925 7.73764C23.3496 10.385 23.0157 13.0323 22.6578 15.6797C22.5014 16.8424 21.7945 17.3637 20.4079 17.3662C17.5985 17.3739 14.7921 17.3662 11.9857 17.3662H11.9887ZM17.6526 18.8126C19.1867 18.6363 20.7899 19.0196 22.366 18.442C22.3931 18.6541 22.4202 18.8356 22.4412 19.0145C22.5646 20.0238 22.6789 21.0306 22.8142 22.0374C22.9045 22.7095 22.751 23.2972 22.0592 23.7087C21.199 24.2223 19.9356 24.023 19.5266 23.2052C18.8287 21.7998 18.2542 20.3535 17.6286 18.9225C17.6195 18.8995 17.6406 18.8662 17.6526 18.81V18.8126ZM1.63843 18.4446C3.20556 19.0196 4.80878 18.649 6.38794 18.8126C6.37591 18.9148 6.38494 19.0017 6.35185 19.0783C5.79238 20.3765 5.24794 21.6771 4.65839 22.9625C4.18013 24 2.82656 24.3168 1.852 23.6499C1.34065 23.2998 1.14814 22.8219 1.2083 22.2751C1.34666 21.0179 1.49405 19.7606 1.64144 18.442L1.63843 18.4446Z"
            fill={color}
          />
        </svg>
      );
    case "chair":
      return (
        <svg
          className={`icon ${size}`}
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M12.1993 4.48333C13.3901 4.48333 14.3554 3.47971 14.3554 2.24167C14.3554 1.00363 13.3901 0 12.1993 0C11.0086 0 10.0433 1.00363 10.0433 2.24167C10.0433 3.47971 11.0086 4.48333 12.1993 4.48333Z"
            fill={color}
          />
          <path
            d="M10.1997 23.969C5.87859 23.5876 2.66173 19.6228 3.02849 15.1308C3.25501 12.3556 4.80278 9.91602 7.16924 8.60366C7.71188 8.30276 8.38586 8.51628 8.67527 9.08046C8.96467 9.64464 8.75931 10.3454 8.21667 10.6463C6.51919 11.5871 5.40887 13.337 5.24691 15.3269C4.98422 18.5477 7.29001 21.3905 10.3878 21.6637C12.3246 21.8344 14.1829 20.9739 15.36 19.3624C15.7318 18.8532 16.4303 18.7537 16.9195 19.1402C17.4092 19.5267 17.505 20.2523 17.1332 20.7615C15.4925 23.009 12.9006 24.2085 10.1991 23.9701L10.1997 23.969Z"
            fill={color}
          />
          <path
            d="M21.8184 19.6695L18.9789 14.0249C18.7863 13.5926 18.4646 13.1482 17.7823 13.1482H14.1091V11.4933L17.2836 11.4956C18.5587 11.4956 18.5587 9.51435 17.2836 9.51435L14.1091 9.51666V7.34212C14.1091 4.74863 10.3089 4.74863 10.3089 7.34212V13.9161C10.3089 14.9929 11.1482 15.8655 12.184 15.8655H16.9564L19.5299 20.9813C20.3681 22.5616 22.6566 21.2498 21.8184 19.6695Z"
            fill={color}
          />
        </svg>
      );
    case "eye":
      return (
        <svg
          className={`icon ${size}`}
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M2.63125 4.3103C2.99554 3.87152 3.40413 3.44 3.85826 3.0303H11.7482C11.8862 3.0303 11.9982 2.91837 11.9982 2.7803V2.06818C11.9982 1.93011 11.8862 1.81818 11.7482 1.81818H5.45203C7.15409 0.739394 9.31398 0 11.9994 0C16.4804 0 19.4968 2.05818 21.3688 4.3103C22.192 5.3035 22.8652 6.40866 23.3674 7.59151C23.7735 8.55394 24 9.44364 24 10C24 10.5576 23.7735 11.4461 23.3674 12.4085C22.8648 13.5912 22.1917 14.6963 21.3688 15.6897C19.4968 17.9418 16.4792 20 11.9994 20C9.31275 20 7.15286 19.2606 5.44957 18.1818H11.7494C11.8875 18.1818 11.9994 18.0699 11.9994 17.9318V17.2197C11.9994 17.0816 11.8875 16.9697 11.7494 16.9697H3.85826C3.24912 16.4186 2.69673 15.8096 2.20912 15.1515H11.7482C11.8862 15.1515 11.9982 15.0396 11.9982 14.9015V14.2424C13.1406 14.2426 14.2363 13.7958 15.0442 13.0003C15.8521 12.2048 16.3061 11.1258 16.3062 10.0006C16.3064 8.87545 15.8527 7.7963 15.045 7.00058C14.2374 6.20486 13.1418 5.75774 11.9994 5.75758V5.09849C11.9994 4.96041 11.8875 4.84848 11.7494 4.84848H2.20666C2.34203 4.66909 2.48356 4.48849 2.63125 4.3103ZM10.3958 6.06061H1.40424C1.06142 6.64329 0.764761 7.25115 0.516897 7.87879H8.26788C8.74786 7.06061 9.49859 6.41576 10.397 6.06061M7.7916 9.09091H0.127994C0.0512163 9.38832 0.00828749 9.69323 0 10C0 10.2461 0.0443055 10.5564 0.127994 10.9091H7.7916C7.6587 10.3101 7.6587 9.6899 7.7916 9.09091ZM8.26788 12.1212H0.516897C0.764364 12.7488 1.06061 13.3567 1.40301 13.9394H10.3958C9.49981 13.5845 8.75028 12.9445 8.26665 12.1212"
            fill={color}
          />
        </svg>
      );
    default:
      return null;
  }
};

export const generateSeat = (seatData, s, cl, add, m, ac, id) => {
  return (
    <ConfigProvider
      theme={{
        token: {
          paddingSM: 0,
          paddingXS: 0,
          borderRadius: 16,
          boxShadowSecondary: "0 1px 5px #212121",
          sizePopupArrow: m ? 16 : 20,
        },
      }}>
      <Tooltip
        color={cl}
        title={
          <div className="df fdc aic fs12 select-label">
            <p className="w100 df aic jcsb">
              <p className="fs18">
                {seatData.price} {seatData.currency}
              </p>
              {generateIcon(seatData?.type, seatData?.color, "large")}
            </p>
            <p className="w100 df aic jcsb" style={{ color: cl }}>
              <span>{seatData.category}</span> {seatData.type}
            </p>
            <p className="w100 df aic gap10 line3">
              <span>
                Row: <span>{seatData.row}</span>{" "}
              </span>
              <span>
                Seats: <span>{seatData.seats}</span>
              </span>
            </p>
            <span
              className="w100 df aic jcc gap5 fs14"
              style={{
                backgroundColor: s ? "#53BC6B" : m ? cl : "",
                marginTop: "3px",
              }}
              onClick={() => {
                ac(seatData.id);
                if (seatData.status === "available" && m) {
                  add(seatData);
                }
              }}>
              {seatData.status === "busy" ? (
                "This chair is busy"
              ) : !s ? (
                m ? (
                  <span style={{ color: "#2c2c2b" }}>Tap to select</span>
                ) : (
                  "Click to select"
                )
              ) : (
                <span className="df aic gap5" style={{ color: "#2c2c2b" }}>
                  <MdOutlineCheckCircle style={{ marginBottom: "3px" }} />
                  <span>Selected</span>
                </span>
              )}
            </span>
          </div>
        }
        arrow={m}
        {...(!m && { placement: "bottomRight" })}
        trigger={m ? "click" : "hover"}
        mouseEnterDelay={0}
        mouseLeaveDelay={0}
        {...(m && { open: id === seatData?.id })}
        onOpenChange={(e) => {
          if (m) {
            ac(e ? seatData.id : null);
          }
        }}>
        {s && seatData.status === "available" ? (
          <IoIosCheckmarkCircle className="chair-icon scale" />
        ) : seatData.status === "busy" ? (
          <RiCheckboxBlankCircleFill className="chair-icon busy" />
        ) : (
          <RiCheckboxBlankCircleFill className="chair-icon" />
        )}
      </Tooltip>
    </ConfigProvider>
  );
};

export const InputComponent = (props) => {
  return (
    <input {...props} placeholder={props.name} autoComplete="off" required />
  );
};
